// <auto-generated />
using BugTrackerService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BugTrackerService.Migrations
{
    [DbContext(typeof(BugTrackerServiceContext))]
    [Migration("20180305204220_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BugTrackerService.Models.EmployeeModel", b =>
                {
                    b.Property<int>("EmployeeModelID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EMail")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<int?>("TicketModelTicketID");

                    b.HasKey("EmployeeModelID");

                    b.HasIndex("TicketModelTicketID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("BugTrackerService.Models.TicketEmployee", b =>
                {
                    b.Property<int?>("EmployeeID");

                    b.Property<int?>("TicketID");

                    b.HasKey("EmployeeID", "TicketID");

                    b.HasIndex("TicketID");

                    b.ToTable("TicketEmployee");
                });

            modelBuilder.Entity("BugTrackerService.Models.TicketModel", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("Priority");

                    b.Property<string>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("UpdateDate");

                    b.Property<int>("UserID");

                    b.HasKey("TicketID");

                    b.HasIndex("UserID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("BugTrackerService.Models.UserModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EMail")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BugTrackerService.Models.EmployeeModel", b =>
                {
                    b.HasOne("BugTrackerService.Models.TicketModel")
                        .WithMany("Employees")
                        .HasForeignKey("TicketModelTicketID");
                });

            modelBuilder.Entity("BugTrackerService.Models.TicketEmployee", b =>
                {
                    b.HasOne("BugTrackerService.Models.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BugTrackerService.Models.TicketModel", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BugTrackerService.Models.TicketModel", b =>
                {
                    b.HasOne("BugTrackerService.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
