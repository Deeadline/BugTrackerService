@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
}

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="form-inline my-2 my-lg-0">
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage" class="nav-link">Hello @user.FullName </a>
            </li>
            <li class="nav-item">
                <button type="submit" class="nav-link" style="background-color: transparent;border: none;cursor: pointer"><i class="fas fa-sign-out-alt"></i>Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item">
            <a asp-area="" asp-controller="Account" asp-action="Register" class="nav-link"><i class="fas fa-registered fa-fw"></i>Register</a>
        </li>
        <li class="nav-item">
            <a asp-area="" asp-controller="Account" asp-action="Login" class="nav-link"><i class="fas fa-sign-in-alt fa-fw"></i>Log in</a>
        </li>
    </ul>
}